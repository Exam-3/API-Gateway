definitions:
  item.AcceptSwapRequestRequest:
    properties:
      swap_id:
        type: string
    type: object
  item.AddItemCategoryRequest:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  item.AddItemCategoryResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  item.AddItemRequest:
    properties:
      category_id:
        type: string
      condition:
        type: string
      description:
        type: string
      name:
        type: string
      swap_preference:
        type: string
      user_id:
        type: string
    type: object
  item.AddRatingRequest:
    properties:
      comment:
        type: string
      rater_id:
        type: string
      rating:
        type: number
      swap_id:
        type: string
      user_id:
        type: string
    type: object
  item.AddRecyclingCenterRequest:
    properties:
      accepted_materials:
        items:
          type: string
        type: array
      address:
        type: string
      contact_number:
        type: string
      name:
        type: string
      working_hours:
        type: string
    type: object
  item.CreateEcoChallengeRequest:
    properties:
      description:
        type: string
      end_date:
        type: string
      reward_points:
        type: integer
      start_date:
        type: string
      title:
        type: string
    type: object
  item.CreateEcoChallengeResponse:
    properties:
      challenge:
        $ref: '#/definitions/item.EcoChallenge'
    type: object
  item.CreateEcoTipRequest:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  item.CreateEcoTipResponse:
    properties:
      tip:
        $ref: '#/definitions/item.EcoTip'
    type: object
  item.DeleteItemResponse:
    properties:
      message:
        type: string
    type: object
  item.EcoChallenge:
    properties:
      created_at:
        type: string
      description:
        type: string
      end_date:
        type: string
      id:
        type: string
      reward_points:
        type: integer
      start_date:
        type: string
      title:
        type: string
    type: object
  item.EcoTip:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  item.GetEcoTipsRequest:
    properties:
      limit:
        type: integer
      page:
        type: integer
    type: object
  item.GetEcoTipsResponse:
    properties:
      limit:
        type: integer
      page:
        type: integer
      tips:
        items:
          $ref: '#/definitions/item.EcoTip'
        type: array
      total:
        type: integer
    type: object
  item.GetRatingsRequest:
    properties:
      limit:
        type: integer
      page:
        type: integer
      user_id:
        type: string
    type: object
  item.GetRatingsResponse:
    properties:
      average_rating:
        type: number
      limit:
        type: integer
      page:
        type: integer
      ratings:
        items:
          $ref: '#/definitions/item.Rating'
        type: array
      total_ratings:
        type: integer
    type: object
  item.GetStatisticsRequest:
    properties:
      end_date:
        type: string
      start_date:
        type: string
    type: object
  item.GetStatisticsResponse:
    properties:
      top_categories:
        items:
          $ref: '#/definitions/item.TopCategory'
        type: array
      top_recycling_centers:
        items:
          $ref: '#/definitions/item.TopRecyclingCenter'
        type: array
      total_eco_points_earned:
        type: integer
      total_recycled_items:
        type: integer
      total_swaps:
        type: integer
    type: object
  item.ItemResponse:
    properties:
      category_id:
        type: string
      condition:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        type: string
      swap_preference:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  item.ListItemsRequest:
    properties:
      limit:
        type: integer
      page:
        type: integer
    type: object
  item.ListItemsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/item.ItemResponse'
        type: array
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  item.ListRecyclingCentersResponse:
    properties:
      centers:
        items:
          $ref: '#/definitions/item.RecyclingCenterResponse'
        type: array
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  item.ListSwapRequestsRequest:
    properties:
      limit:
        type: integer
      page:
        type: integer
      status:
        type: string
    type: object
  item.ListSwapRequestsResponse:
    properties:
      limit:
        type: integer
      page:
        type: integer
      swaps:
        items:
          $ref: '#/definitions/item.SwapResponse'
        type: array
      total:
        type: integer
    type: object
  item.ParticipateEcoChallengeRequest:
    properties:
      challenge_id:
        type: string
      user_id:
        type: string
    type: object
  item.ParticipateEcoChallengeResponse:
    properties:
      challenge_id:
        type: string
      joined_at:
        type: string
      status:
        type: string
      user_id:
        type: string
    type: object
  item.Rating:
    properties:
      comment:
        type: string
      created_at:
        type: string
      id:
        type: string
      rater_id:
        type: string
      rating:
        type: number
      swap_id:
        type: string
    type: object
  item.RecyclingCenterResponse:
    properties:
      accepted_materials:
        items:
          type: string
        type: array
      address:
        type: string
      contact_number:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
      working_hours:
        type: string
    type: object
  item.RecyclingItem:
    properties:
      item_id:
        type: string
      material:
        type: string
      weight:
        type: number
    type: object
  item.RecyclingSubmissionResponse:
    properties:
      center_id:
        type: string
      created_at:
        type: string
      eco_points_earned:
        type: integer
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/item.RecyclingItem'
        type: array
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  item.RejectSwapRequestRequest:
    properties:
      reason:
        type: string
      swap_id:
        type: string
    type: object
  item.SearchItemsRequest:
    properties:
      category:
        type: string
      condition:
        type: string
      limit:
        type: integer
      page:
        type: integer
    type: object
  item.SearchRecyclingCentersRequest:
    properties:
      limit:
        type: integer
      material:
        type: string
      page:
        type: integer
    type: object
  item.SendSwapRequestRequest:
    properties:
      message:
        type: string
      offered_item_id:
        type: string
      requested_item_id:
        type: string
      user_id:
        type: string
    type: object
  item.SubmitItemsForRecyclingRequest:
    properties:
      center_id:
        type: string
      items:
        items:
          $ref: '#/definitions/item.RecyclingItem'
        type: array
      user_id:
        type: string
    type: object
  item.SwapResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      message:
        type: string
      offered_item_id:
        type: string
      reason:
        type: string
      requested_item_id:
        type: string
      requester_id:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  item.TopCategory:
    properties:
      id:
        type: string
      name:
        type: string
      swap_count:
        type: integer
    type: object
  item.TopRecyclingCenter:
    properties:
      id:
        type: string
      name:
        type: string
      submissions_count:
        type: integer
    type: object
  item.UpdateEcoChallengeProgressRequest:
    properties:
      challenge_id:
        type: string
      recycled_items_count:
        type: integer
    type: object
  item.UpdateEcoChallengeProgressResponse:
    properties:
      challenge_id:
        type: string
      recycled_items_count:
        type: integer
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  item.UpdateItemRequest:
    properties:
      category_id:
        type: string
      condition:
        type: string
      description:
        type: string
      item_id:
        type: string
      name:
        type: string
      swap_preference:
        type: string
    type: object
  user.AddEcoPointsRequest:
    properties:
      points:
        type: integer
      reason:
        type: string
      user_id:
        type: string
    type: object
  user.AddEcoPointsResponse:
    properties:
      added_points:
        type: integer
      eco_points:
        type: integer
      reason:
        type: string
      timestamp:
        type: string
      user_id:
        type: string
    type: object
  user.EcoPointTransaction:
    properties:
      id:
        type: string
      points:
        type: integer
      reason:
        type: string
      timestamp:
        type: string
      type:
        type: string
    type: object
  user.GetEcoPointsHistoryRequest:
    properties:
      limit:
        type: integer
      page:
        type: integer
      points:
        type: integer
      reason:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  user.GetEcoPointsHistoryResponse:
    properties:
      history:
        items:
          $ref: '#/definitions/user.EcoPointTransaction'
        type: array
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  user.GetEcoPointsResponse:
    properties:
      eco_points:
        type: integer
      last_updated:
        type: string
      user_id:
        type: string
    type: object
  user.GetUserProfileResponse:
    properties:
      created_at:
        type: string
      eco_points:
        type: integer
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  user.GetUsersRequest:
    properties:
      eco_points:
        type: integer
      full_name:
        type: string
      limit:
        type: integer
      page:
        type: integer
      username:
        type: string
    type: object
  user.GetUsersResponse:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
      users:
        items:
          $ref: '#/definitions/user.User'
        type: array
    type: object
  user.UpdateProfileResponse:
    properties:
      bio:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  user.UpdateUserProfileRequest:
    properties:
      bio:
        type: string
      full_name:
        type: string
      user_id:
        type: string
      username:
        type: string
    type: object
  user.User:
    properties:
      eco_points:
        type: integer
      full_name:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Gateway of User Item System
  title: User Item System
  version: "1.0"
paths:
  /item-system/category/catogories:
    post:
      description: Inserts new item category info into item_categories table in PostgreSQL
      parameters:
      - description: New data
        in: body
        name: new_data
        required: true
        schema:
          $ref: '#/definitions/item.AddItemCategoryRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.AddItemCategoryResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while adding item category
          schema:
            type: string
      summary: Adds an item category
      tags:
      - item
  /item-system/eco-tips:
    get:
      description: Retrieves all eco tips info from PostgreSQL
      parameters:
      - description: Request data
        in: body
        name: new_data
        required: true
        schema:
          $ref: '#/definitions/item.GetEcoTipsRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.GetEcoTipsResponse'
        "500":
          description: Server error while getting eco tips
          schema:
            type: string
      summary: Gets all eco tips
      tags:
      - eco_tip
    post:
      description: Inserts new eco tip info into eco_tips table in PostgreSQL
      parameters:
      - description: New data
        in: body
        name: new_data
        required: true
        schema:
          $ref: '#/definitions/item.CreateEcoTipRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.CreateEcoTipResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while creating eco tip
          schema:
            type: string
      summary: Creates a new eco tip
      tags:
      - eco_tip
  /item-system/ecosystem/eco-challenge:
    post:
      description: Inserts new eco challenge info into eco_challenges table in PostgreSQL
      parameters:
      - description: New data
        in: body
        name: new_data
        required: true
        schema:
          $ref: '#/definitions/item.CreateEcoChallengeRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.CreateEcoChallengeResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while creating eco challenge
          schema:
            type: string
      summary: Creates a new eco challenge
      tags:
      - eco_challenge
  /item-system/ecosystem/participate:
    post:
      description: Inserts new participation info into challenge_participations table
        in PostgreSQL
      parameters:
      - description: New data
        in: body
        name: new_data
        required: true
        schema:
          $ref: '#/definitions/item.ParticipateEcoChallengeRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.ParticipateEcoChallengeResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while participating in eco challenge
          schema:
            type: string
      summary: Participates in an eco challenge
      tags:
      - eco_challenge
  /item-system/ecosystem/update:
    put:
      description: Updates progress info in challenge_participations table in PostgreSQL
      parameters:
      - description: New data
        in: body
        name: new_data
        required: true
        schema:
          $ref: '#/definitions/item.UpdateEcoChallengeProgressRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.UpdateEcoChallengeProgressResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while updating eco challenge progress
          schema:
            type: string
      summary: Updates progress in an eco challenge
      tags:
      - eco_challenge
  /item-system/items:
    post:
      description: Retrieves all items info from items table in PostgreSQL
      parameters:
      - description: list item data
        in: body
        name: update_data
        required: true
        schema:
          $ref: '#/definitions/item.ListItemsRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.ListItemsResponse'
        "500":
          description: Server error while listing items
          schema:
            type: string
      summary: Lists all items
      tags:
      - item
  /item-system/items/{item_id}:
    delete:
      description: Deletes item from items table in PostgreSQL
      parameters:
      - description: Item ID
        in: path
        name: item_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.DeleteItemResponse'
        "400":
          description: Invalid item ID
          schema:
            type: string
        "500":
          description: Server error while deleting item
          schema:
            type: string
      summary: Deletes an item
      tags:
      - item
    get:
      description: Retrieves item info from items table in PostgreSQL
      parameters:
      - description: Item ID
        in: path
        name: item_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.ItemResponse'
        "400":
          description: Invalid item ID
          schema:
            type: string
        "500":
          description: Server error while getting item
          schema:
            type: string
      summary: Gets an item
      tags:
      - item
    put:
      description: Updates item info in items table in PostgreSQL
      parameters:
      - description: Item ID
        in: path
        name: item_id
        required: true
        type: string
      - description: Updated item data
        in: body
        name: update_data
        required: true
        schema:
          $ref: '#/definitions/item.UpdateItemRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.ItemResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while updating item
          schema:
            type: string
      summary: Updates an item
      tags:
      - item
  /item-system/items/addItem:
    post:
      description: Inserts new item info into items table in PostgreSQL
      parameters:
      - description: New item data
        in: body
        name: new_data
        required: true
        schema:
          $ref: '#/definitions/item.AddItemRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.ItemResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while adding item
          schema:
            type: string
      summary: Adds a new item
      tags:
      - item
  /item-system/items/search:
    post:
      description: Searches items info in items table in PostgreSQL
      parameters:
      - description: list item data
        in: body
        name: update_data
        required: true
        schema:
          $ref: '#/definitions/item.SearchItemsRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.ListItemsResponse'
        "500":
          description: Server error while searching items
          schema:
            type: string
      summary: Searches for items
      tags:
      - item
  /item-system/ratings/GetAll:
    post:
      description: Retrieves all ratings info from ratings table in PostgreSQL
      parameters:
      - description: rating data
        in: body
        name: new_data
        required: true
        schema:
          $ref: '#/definitions/item.GetRatingsRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.GetRatingsResponse'
        "500":
          description: Server error while getting ratings
          schema:
            type: string
      summary: Gets all ratings
      tags:
      - rating
  /item-system/ratings/add:
    post:
      description: Inserts new rating info into ratings table in PostgreSQL
      parameters:
      - description: New rating data
        in: body
        name: new_data
        required: true
        schema:
          $ref: '#/definitions/item.AddRatingRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.Rating'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while adding rating
          schema:
            type: string
      summary: Adds a new rating
      tags:
      - rating
  /item-system/recycling:
    post:
      description: Inserts recycling submission info into the database
      parameters:
      - description: New recycling submission data
        in: body
        name: new_data
        required: true
        schema:
          $ref: '#/definitions/item.SubmitItemsForRecyclingRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.RecyclingSubmissionResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while submitting items for recycling
          schema:
            type: string
      summary: Submits items for recycling
      tags:
      - recycling
  /item-system/recycling-centers:
    post:
      description: Inserts new recycling center info into the database
      parameters:
      - description: New recycling center data
        in: body
        name: new_data
        required: true
        schema:
          $ref: '#/definitions/item.AddRecyclingCenterRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.RecyclingCenterResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while adding recycling center
          schema:
            type: string
      summary: Adds a new recycling center
      tags:
      - recycling_center
  /item-system/recycling-centers/search:
    post:
      description: Retrieves recycling centers based on search criteria
      parameters:
      - description: Search criteria
        in: body
        name: search_criteria
        required: true
        schema:
          $ref: '#/definitions/item.SearchRecyclingCentersRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.ListRecyclingCentersResponse'
        "400":
          description: Invalid search criteria
          schema:
            type: string
        "500":
          description: Server error while searching recycling centers
          schema:
            type: string
      summary: Searches for recycling centers
      tags:
      - recycling_center
  /item-system/statistics:
    post:
      description: Retrieves various statistics from the service
      parameters:
      - description: Statistics filter
        in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/item.GetStatisticsRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.GetStatisticsResponse'
        "400":
          description: Invalid filter
          schema:
            type: string
        "500":
          description: Server error while getting statistics
          schema:
            type: string
      summary: Gets statistics
      tags:
      - statistics
  /item-system/swaps:
    post:
      description: Sends a swap request to the service
      parameters:
      - description: Swap request info
        in: body
        name: swap
        required: true
        schema:
          $ref: '#/definitions/item.SendSwapRequestRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.SwapResponse'
        "400":
          description: Invalid request data
          schema:
            type: string
        "500":
          description: Server error while sending swap request
          schema:
            type: string
      summary: Send swap request
      tags:
      - swap
  /item-system/swaps/accept:
    put:
      description: Accepts a swap request
      parameters:
      - description: Swap request info
        in: body
        name: swap
        required: true
        schema:
          $ref: '#/definitions/item.AcceptSwapRequestRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.SwapResponse'
        "400":
          description: Invalid request data
          schema:
            type: string
        "500":
          description: Server error while accepting swap request
          schema:
            type: string
      summary: Accept swap request
      tags:
      - swap
  /item-system/swaps/list:
    post:
      description: Lists all swap requests
      parameters:
      - description: Swap request filter
        in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/item.ListSwapRequestsRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.ListSwapRequestsResponse'
        "400":
          description: Invalid filter
          schema:
            type: string
        "500":
          description: Server error while listing swap requests
          schema:
            type: string
      summary: List swap requests
      tags:
      - swap
  /item-system/swaps/reject:
    put:
      description: Rejects a swap request
      parameters:
      - description: Swap request info
        in: body
        name: swap
        required: true
        schema:
          $ref: '#/definitions/item.RejectSwapRequestRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.SwapResponse'
        "400":
          description: Invalid request data
          schema:
            type: string
        "500":
          description: Server error while rejecting swap request
          schema:
            type: string
      summary: Reject swap request
      tags:
      - swap
  /item-system/users:
    post:
      description: Retrieves list of users from PostgreSQL
      parameters:
      - description: filter user info
        in: body
        name: new_info
        required: true
        schema:
          $ref: '#/definitions/user.GetUsersRequest'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.GetUsersResponse'
            type: array
        "500":
          description: Server error while getting users
          schema:
            type: string
      summary: Gets list of users
      tags:
      - user
  /item-system/users/{user_id}:
    delete:
      description: Removes user info from PostgreSQL
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      responses:
        "200":
          description: User deleted successfully
          schema:
            type: string
        "400":
          description: Invalid user ID
          schema:
            type: string
        "500":
          description: Server error while deleting user
          schema:
            type: string
      summary: Deletes a user
      tags:
      - user
    get:
      description: Retrieves user profile info from PostgreSQL
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GetUserProfileResponse'
        "400":
          description: Invalid user ID
          schema:
            type: string
        "500":
          description: Server error while getting user profile
          schema:
            type: string
      summary: Gets user profile
      tags:
      - user
    put:
      description: Updates user profile info in PostgreSQL
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Update user info
        in: body
        name: new_info
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserProfileRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UpdateProfileResponse'
        "400":
          description: Invalid user ID or data
          schema:
            type: string
        "500":
          description: Server error while updating user profile
          schema:
            type: string
      summary: Updates user profile
      tags:
      - user
  /item-system/users/{user_id}/eco-points:
    get:
      description: Retrieves eco points info from PostgreSQL
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GetEcoPointsResponse'
        "400":
          description: Invalid user ID
          schema:
            type: string
        "500":
          description: Server error while getting eco points
          schema:
            type: string
      summary: Gets eco points of a user
      tags:
      - user
    put:
      description: Inserts eco points info into PostgreSQL
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Eco points info
        in: body
        name: points
        required: true
        schema:
          $ref: '#/definitions/user.AddEcoPointsRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.AddEcoPointsResponse'
        "400":
          description: Invalid user ID or data
          schema:
            type: string
        "500":
          description: Server error while adding eco points
          schema:
            type: string
      summary: Adds eco points to a user
      tags:
      - user
  /item-system/users/{user_id}/eco-points/history:
    post:
      description: Retrieves eco points history from PostgreSQL
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Eco points history info
        in: body
        name: points
        required: true
        schema:
          $ref: '#/definitions/user.GetEcoPointsHistoryRequest'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.GetEcoPointsHistoryResponse'
            type: array
        "400":
          description: Invalid user ID
          schema:
            type: string
        "500":
          description: Server error while getting eco points history
          schema:
            type: string
      summary: Gets eco points history of a user
      tags:
      - user
swagger: "2.0"
