{
    "swagger": "2.0",
    "info": {
        "description": "API Gateway of User Item System",
        "title": "User Item System",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/item-system/category/catogories": {
            "post": {
                "description": "Inserts new item category info into item_categories table in PostgreSQL",
                "tags": [
                    "item"
                ],
                "summary": "Adds an item category",
                "parameters": [
                    {
                        "description": "New data",
                        "name": "new_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.AddItemCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.AddItemCategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while adding item category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/eco-tips": {
            "get": {
                "description": "Retrieves all eco tips info from PostgreSQL",
                "tags": [
                    "eco_tip"
                ],
                "summary": "Gets all eco tips",
                "parameters": [
                    {
                        "description": "Request data",
                        "name": "new_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.GetEcoTipsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.GetEcoTipsResponse"
                        }
                    },
                    "500": {
                        "description": "Server error while getting eco tips",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Inserts new eco tip info into eco_tips table in PostgreSQL",
                "tags": [
                    "eco_tip"
                ],
                "summary": "Creates a new eco tip",
                "parameters": [
                    {
                        "description": "New data",
                        "name": "new_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.CreateEcoTipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.CreateEcoTipResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while creating eco tip",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/ecosystem/eco-challenge": {
            "post": {
                "description": "Inserts new eco challenge info into eco_challenges table in PostgreSQL",
                "tags": [
                    "eco_challenge"
                ],
                "summary": "Creates a new eco challenge",
                "parameters": [
                    {
                        "description": "New data",
                        "name": "new_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.CreateEcoChallengeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.CreateEcoChallengeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while creating eco challenge",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/ecosystem/participate": {
            "post": {
                "description": "Inserts new participation info into challenge_participations table in PostgreSQL",
                "tags": [
                    "eco_challenge"
                ],
                "summary": "Participates in an eco challenge",
                "parameters": [
                    {
                        "description": "New data",
                        "name": "new_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.ParticipateEcoChallengeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.ParticipateEcoChallengeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while participating in eco challenge",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/ecosystem/update": {
            "put": {
                "description": "Updates progress info in challenge_participations table in PostgreSQL",
                "tags": [
                    "eco_challenge"
                ],
                "summary": "Updates progress in an eco challenge",
                "parameters": [
                    {
                        "description": "New data",
                        "name": "new_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.UpdateEcoChallengeProgressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.UpdateEcoChallengeProgressResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while updating eco challenge progress",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/items": {
            "post": {
                "description": "Retrieves all items info from items table in PostgreSQL",
                "tags": [
                    "item"
                ],
                "summary": "Lists all items",
                "parameters": [
                    {
                        "description": "list item data",
                        "name": "update_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.ListItemsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.ListItemsResponse"
                        }
                    },
                    "500": {
                        "description": "Server error while listing items",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/items/addItem": {
            "post": {
                "description": "Inserts new item info into items table in PostgreSQL",
                "tags": [
                    "item"
                ],
                "summary": "Adds a new item",
                "parameters": [
                    {
                        "description": "New item data",
                        "name": "new_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.AddItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while adding item",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/items/search": {
            "post": {
                "description": "Searches items info in items table in PostgreSQL",
                "tags": [
                    "item"
                ],
                "summary": "Searches for items",
                "parameters": [
                    {
                        "description": "list item data",
                        "name": "update_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.SearchItemsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.ListItemsResponse"
                        }
                    },
                    "500": {
                        "description": "Server error while searching items",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/items/{item_id}": {
            "get": {
                "description": "Retrieves item info from items table in PostgreSQL",
                "tags": [
                    "item"
                ],
                "summary": "Gets an item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid item ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while getting item",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates item info in items table in PostgreSQL",
                "tags": [
                    "item"
                ],
                "summary": "Updates an item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated item data",
                        "name": "update_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.UpdateItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while updating item",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes item from items table in PostgreSQL",
                "tags": [
                    "item"
                ],
                "summary": "Deletes an item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.DeleteItemResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid item ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while deleting item",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/ratings/GetAll": {
            "post": {
                "description": "Retrieves all ratings info from ratings table in PostgreSQL",
                "tags": [
                    "rating"
                ],
                "summary": "Gets all ratings",
                "parameters": [
                    {
                        "description": "rating data",
                        "name": "new_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.GetRatingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.GetRatingsResponse"
                        }
                    },
                    "500": {
                        "description": "Server error while getting ratings",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/ratings/add": {
            "post": {
                "description": "Inserts new rating info into ratings table in PostgreSQL",
                "tags": [
                    "rating"
                ],
                "summary": "Adds a new rating",
                "parameters": [
                    {
                        "description": "New rating data",
                        "name": "new_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.AddRatingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.Rating"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while adding rating",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/recycling": {
            "post": {
                "description": "Inserts recycling submission info into the database",
                "tags": [
                    "recycling"
                ],
                "summary": "Submits items for recycling",
                "parameters": [
                    {
                        "description": "New recycling submission data",
                        "name": "new_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.SubmitItemsForRecyclingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.RecyclingSubmissionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while submitting items for recycling",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/recycling-centers": {
            "post": {
                "description": "Inserts new recycling center info into the database",
                "tags": [
                    "recycling_center"
                ],
                "summary": "Adds a new recycling center",
                "parameters": [
                    {
                        "description": "New recycling center data",
                        "name": "new_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.AddRecyclingCenterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.RecyclingCenterResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while adding recycling center",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/recycling-centers/search": {
            "post": {
                "description": "Retrieves recycling centers based on search criteria",
                "tags": [
                    "recycling_center"
                ],
                "summary": "Searches for recycling centers",
                "parameters": [
                    {
                        "description": "Search criteria",
                        "name": "search_criteria",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.SearchRecyclingCentersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.ListRecyclingCentersResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid search criteria",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while searching recycling centers",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/statistics": {
            "post": {
                "description": "Retrieves various statistics from the service",
                "tags": [
                    "statistics"
                ],
                "summary": "Gets statistics",
                "parameters": [
                    {
                        "description": "Statistics filter",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.GetStatisticsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.GetStatisticsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while getting statistics",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/swaps": {
            "post": {
                "description": "Sends a swap request to the service",
                "tags": [
                    "swap"
                ],
                "summary": "Send swap request",
                "parameters": [
                    {
                        "description": "Swap request info",
                        "name": "swap",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.SendSwapRequestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.SwapResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while sending swap request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/swaps/accept": {
            "put": {
                "description": "Accepts a swap request",
                "tags": [
                    "swap"
                ],
                "summary": "Accept swap request",
                "parameters": [
                    {
                        "description": "Swap request info",
                        "name": "swap",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.AcceptSwapRequestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.SwapResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while accepting swap request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/swaps/list": {
            "post": {
                "description": "Lists all swap requests",
                "tags": [
                    "swap"
                ],
                "summary": "List swap requests",
                "parameters": [
                    {
                        "description": "Swap request filter",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.ListSwapRequestsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.ListSwapRequestsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while listing swap requests",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/swaps/reject": {
            "put": {
                "description": "Rejects a swap request",
                "tags": [
                    "swap"
                ],
                "summary": "Reject swap request",
                "parameters": [
                    {
                        "description": "Swap request info",
                        "name": "swap",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.RejectSwapRequestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.SwapResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while rejecting swap request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/users": {
            "post": {
                "description": "Retrieves list of users from PostgreSQL",
                "tags": [
                    "user"
                ],
                "summary": "Gets list of users",
                "parameters": [
                    {
                        "description": "filter user info",
                        "name": "new_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.GetUsersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.GetUsersResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error while getting users",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/users/{user_id}": {
            "get": {
                "description": "Retrieves user profile info from PostgreSQL",
                "tags": [
                    "user"
                ],
                "summary": "Gets user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.GetUserProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while getting user profile",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates user profile info in PostgreSQL",
                "tags": [
                    "user"
                ],
                "summary": "Updates user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update user info",
                        "name": "new_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UpdateProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID or data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while updating user profile",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes user info from PostgreSQL",
                "tags": [
                    "user"
                ],
                "summary": "Deletes a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while deleting user",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/users/{user_id}/eco-points": {
            "get": {
                "description": "Retrieves eco points info from PostgreSQL",
                "tags": [
                    "user"
                ],
                "summary": "Gets eco points of a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.GetEcoPointsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while getting eco points",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Inserts eco points info into PostgreSQL",
                "tags": [
                    "user"
                ],
                "summary": "Adds eco points to a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Eco points info",
                        "name": "points",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.AddEcoPointsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.AddEcoPointsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID or data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while adding eco points",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item-system/users/{user_id}/eco-points/history": {
            "post": {
                "description": "Retrieves eco points history from PostgreSQL",
                "tags": [
                    "user"
                ],
                "summary": "Gets eco points history of a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Eco points history info",
                        "name": "points",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.GetEcoPointsHistoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.GetEcoPointsHistoryResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while getting eco points history",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "item.AcceptSwapRequestRequest": {
            "type": "object",
            "properties": {
                "swap_id": {
                    "type": "string"
                }
            }
        },
        "item.AddItemCategoryRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "item.AddItemCategoryResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "item.AddItemRequest": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string"
                },
                "condition": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "swap_preference": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "item.AddRatingRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "rater_id": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "swap_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "item.AddRecyclingCenterRequest": {
            "type": "object",
            "properties": {
                "accepted_materials": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "address": {
                    "type": "string"
                },
                "contact_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "working_hours": {
                    "type": "string"
                }
            }
        },
        "item.CreateEcoChallengeRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "reward_points": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "item.CreateEcoChallengeResponse": {
            "type": "object",
            "properties": {
                "challenge": {
                    "$ref": "#/definitions/item.EcoChallenge"
                }
            }
        },
        "item.CreateEcoTipRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "item.CreateEcoTipResponse": {
            "type": "object",
            "properties": {
                "tip": {
                    "$ref": "#/definitions/item.EcoTip"
                }
            }
        },
        "item.DeleteItemResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "item.EcoChallenge": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "reward_points": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "item.EcoTip": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "item.GetEcoTipsRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "item.GetEcoTipsResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "tips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/item.EcoTip"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "item.GetRatingsRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "item.GetRatingsResponse": {
            "type": "object",
            "properties": {
                "average_rating": {
                    "type": "number"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "ratings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/item.Rating"
                    }
                },
                "total_ratings": {
                    "type": "integer"
                }
            }
        },
        "item.GetStatisticsRequest": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "item.GetStatisticsResponse": {
            "type": "object",
            "properties": {
                "top_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/item.TopCategory"
                    }
                },
                "top_recycling_centers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/item.TopRecyclingCenter"
                    }
                },
                "total_eco_points_earned": {
                    "type": "integer"
                },
                "total_recycled_items": {
                    "type": "integer"
                },
                "total_swaps": {
                    "type": "integer"
                }
            }
        },
        "item.ItemResponse": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string"
                },
                "condition": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "swap_preference": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "item.ListItemsRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "item.ListItemsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/item.ItemResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "item.ListRecyclingCentersResponse": {
            "type": "object",
            "properties": {
                "centers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/item.RecyclingCenterResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "item.ListSwapRequestsRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "item.ListSwapRequestsResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "swaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/item.SwapResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "item.ParticipateEcoChallengeRequest": {
            "type": "object",
            "properties": {
                "challenge_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "item.ParticipateEcoChallengeResponse": {
            "type": "object",
            "properties": {
                "challenge_id": {
                    "type": "string"
                },
                "joined_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "item.Rating": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "rater_id": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "swap_id": {
                    "type": "string"
                }
            }
        },
        "item.RecyclingCenterResponse": {
            "type": "object",
            "properties": {
                "accepted_materials": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "address": {
                    "type": "string"
                },
                "contact_number": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "working_hours": {
                    "type": "string"
                }
            }
        },
        "item.RecyclingItem": {
            "type": "object",
            "properties": {
                "item_id": {
                    "type": "string"
                },
                "material": {
                    "type": "string"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "item.RecyclingSubmissionResponse": {
            "type": "object",
            "properties": {
                "center_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "eco_points_earned": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/item.RecyclingItem"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "item.RejectSwapRequestRequest": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string"
                },
                "swap_id": {
                    "type": "string"
                }
            }
        },
        "item.SearchItemsRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "condition": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "item.SearchRecyclingCentersRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "material": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "item.SendSwapRequestRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "offered_item_id": {
                    "type": "string"
                },
                "requested_item_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "item.SubmitItemsForRecyclingRequest": {
            "type": "object",
            "properties": {
                "center_id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/item.RecyclingItem"
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "item.SwapResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "offered_item_id": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "requested_item_id": {
                    "type": "string"
                },
                "requester_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "item.TopCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "swap_count": {
                    "type": "integer"
                }
            }
        },
        "item.TopRecyclingCenter": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "submissions_count": {
                    "type": "integer"
                }
            }
        },
        "item.UpdateEcoChallengeProgressRequest": {
            "type": "object",
            "properties": {
                "challenge_id": {
                    "type": "string"
                },
                "recycled_items_count": {
                    "type": "integer"
                }
            }
        },
        "item.UpdateEcoChallengeProgressResponse": {
            "type": "object",
            "properties": {
                "challenge_id": {
                    "type": "string"
                },
                "recycled_items_count": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "item.UpdateItemRequest": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string"
                },
                "condition": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "item_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "swap_preference": {
                    "type": "string"
                }
            }
        },
        "user.AddEcoPointsRequest": {
            "type": "object",
            "properties": {
                "points": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "user.AddEcoPointsResponse": {
            "type": "object",
            "properties": {
                "added_points": {
                    "type": "integer"
                },
                "eco_points": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "user.EcoPointTransaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "points": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "user.GetEcoPointsHistoryRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "points": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "user.GetEcoPointsHistoryResponse": {
            "type": "object",
            "properties": {
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.EcoPointTransaction"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "user.GetEcoPointsResponse": {
            "type": "object",
            "properties": {
                "eco_points": {
                    "type": "integer"
                },
                "last_updated": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "user.GetUserProfileResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "eco_points": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.GetUsersRequest": {
            "type": "object",
            "properties": {
                "eco_points": {
                    "type": "integer"
                },
                "full_name": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.GetUsersResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.User"
                    }
                }
            }
        },
        "user.UpdateProfileResponse": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserProfileRequest": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "eco_points": {
                    "type": "integer"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}